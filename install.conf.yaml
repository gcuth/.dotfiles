- defaults:
    link:
      create: true
      relink: true

- clean: ['~']

# VERY BASIC GLOBAL SETTINGS:
- link:
    ~/.bash_profile:
      path: bash_profile
    ~/.bashrc:
      path: bashrc
      create: true
      relink: true
      force: true
    ~/.vimrc:
      path: vimrc
    ~/.RProfile:
      path: RProfile
    ~/.aliases:
      path: aliases
    ~/.gitignore:
      path: gitignore
    ~/.gitconfig:
      path: gitconfig
    /usr/local/bin:
      path: scripts
      create: true
      relink: true
      force: true

# CREATE THE BASIC (NEEDED) DIRS
- create:
    - ~/.vim/undo-history
    - ~/Code/

# UPDATE APT
- shell:
    - sudo apt update

# INSTALL A TONNE OF STUFF
- shell:
    - sudo apt install -y awscli
    - sudo apt install -y wmctrl
    - sudo apt install -y chromium-browser
    - sudo apt install -y curl
    - sudo apt install -y wget
    - sudo apt install -y cmake
    - sudo apt install -y exfat-utils
    - sudo apt install -y file
    - sudo apt install -y git
    - sudo apt install -y htop
    - sudo apt install -y nmap
    - sudo apt install -y openvpn
    - sudo apt install -y tmux
    - sudo apt install -y vim
    - sudo apt install -y gnupg
    - sudo apt install -y zip

# INSTALL MORE STUFF
- shell:
    - sudo apt install -y python3
    - sudo apt install -y python3-pip
    - sudo apt install -y r-base-core
    - sudo apt install -y libopenblas-base
    - sudo apt install -y ipython
    - sudo apt install -y jupyter
    - sudo apt install -y build-essential
    - sudo apt install -y libatomic1
    - sudo apt install -y gfortran
    - sudo apt install -y perl
    - sudo apt install -y m4
    - sudo apt install -y autotrash
    - sudo apt install -y nodejs
    - sudo apt install -y npm
    - sudo apt install -y pkg-config
    - sudo apt install -y texlive
    - sudo apt install -y pandoc
    - sudo apt install -y pandoc-citeproc
    - sudo apt install -y anki
    - sudo apt install -y ffmpeg
    - sudo apt install -y postgresql
    - sudo apt install -y fail2ban
    - sudo apt install -y rclone
    - sudo apt install -y xclip
    - sudo apt install -y default-jre
    - sudo apt install -y qpdf
    - sudo apt install -y figlet
    - sudo apt install -y lolcat
    - sudo apt install -y zsh
    - sudo apt install -y snapd
    - sudo apt install -y apt-transport-https
    - sudo apt install -y ca-certificates
    - sudo apt install -y curl
    - sudo apt install -y gnupg-agent
    - sudo apt install -y software-properties-common
    - sudo apt install -y fonts-firacode

# GET OH-MY-ZSH
- shell:
    - sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"

# INSTALL THE CUSTOM ZSH THEME AND SET UP ZSH
- link:
    ~/.oh-my-zsh/themes/custom.zsh-theme: custom.zsh-theme
    ~/.zshrc: zshrc

# INSTALL TELEGRAM VIA SNAP
- shell:
    - sudo snap install telegram-desktop

# INSTALL SLACK VIA SNAP
- shell:
    - sudo snap install slack --classic

# GET DOCKER RUNNING
- shell:
    - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
    - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
    - sudo apt install -y docker-ce docker-ce-cli containerd.io
    - sudo docker run hello-world

# GET FIREFOX RUNNING
- shell:
    - sudo add-apt-repository ppa:mozillateam/firefox-next -y
    - sudo apt update
    - sudo apt install -y firefox

# INSTALL VSCODE VIA SNAP
- shell:
    - sudo snap install code --classic
# SET VSCODE SETTINGS (AND SNIPPETS)
- link:
    ~/.config/Code/User/settings.json:
      path: vscode-settings.json
      force: true
      relink: true
    ~/.config/Code/User/snippets/global.code-snippets:
      path: snippets/global-vscode.code-snippets
      force: true
      relink: true
# ADD VSCODE EXTENSIONS
- shell:
    - code --install-extension ms-python.python
    - code --install-extension ms-vscode.wordcount
    - code --install-extension ms-vsliveshare.vsliveshare
    - code --install-extension vscodevim.vim
    - code --install-extension Ikuyadeu.r
    - code --install-extension burkeholland.simple-timer
    - code --install-extension mechatroner.rainbow-csv
    - code --install-extension mohsen1.prettify-json

# VUNDLE FOR VIM
- shell:
    - mkdir -p $HOME/.vim/bundle
    - git clone git://github.com/VundleVim/Vundle.vim.git $HOME/.vim/bundle/
    - vim +PluginInstall +qall

# LINK RCLONE CONF
- link:
    ~/.config/rclone/rclone.conf:
      path: secrets/rclone/rclone.conf

# INSTALL ANACONDA
- shell:
    - ./setup_anaconda

# GET RESCUETIME RUNNING
- shell:
    - curl -o $HOME/Downloads/rescuetime-install.deb https://www.rescuetime.com/installers/rescuetime_current_amd64.deb
    - sudo apt install $HOME/Downloads/rescuetime-install.deb
    - sh rescuetime
    - rm $HOME/Downloads/rescuetime-install.deb

# GET SIGNAL RUNNING
- shell:
    - curl -s https://updates.signal.org/desktop/apt/keys.asc | sudo apt-key add -
    - echo "deb [arch=amd64] https://updates.signal.org/desktop/apt xenial main" | sudo tee -a /etc/apt/sources.list.d/signal-xenial.list
    - sudo apt update && sudo apt install signal-desktop

# INSTALL ZOTERO
- shell:
    - wget -O $HOME/Downloads/zotero.tar.bz2 "https://www.zotero.org/download/client/dl?channel=release&platform=linux-x86_64"
    - tar xjf $HOME/Downloads/zotero.tar.bz2 -C $HOME/Downloads/
    - rm $HOME/Downloads/zotero.tar.bz2
    - sudo mkdir -p /opt/zotero
    - sudo cp -rf $HOME/Downloads/Zotero_linux-x86_64/* /opt/zotero/
    - ln -sf /opt/zotero/zotero.desktop $HOME/.local/share/applications/zotero.desktop
    - rm -rf $Home/Downloads/Zotero_linux-x86_64

- link:
    ~/Documents/thesis/.git/hooks/post-commit:
      path: thesis-post-commit

- shell:
    - ./setup_desktop