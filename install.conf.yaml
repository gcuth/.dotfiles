# DEFAULT BEHAVIOURS
- defaults:
    link:
      create: true
      relink: true

# CLEAN ON START
- clean: ['~', '~/.local/bin/', '~/Library/Application Support/Code/User/snippets/']

# CREATE THE BASIC (NEEDED) DIRS
- create:
    - ~/Developer/

# LINK VERY BASIC GLOBAL SETTINGS FILES, SNIPPETS, & SCRIPTS:
- link:
    ~/.zshrc:
      path: zshrc
      create: true
      relink: true
      force: true
    ~/.stack/config.yaml:
      path: stack/config.yaml
    ~/.zprofile:
      path: zprofile
    ~/.profile:
      path: profile
    ~/.RProfile:
      path: RProfile
    ~/.aliases:
      path: aliases
    ~/.gitignore:
      path: gitignore
    ~/.gitconfig:
      path: gitconfig
    ~/.config/starship.toml:
      path: starship.toml
    ~/.tmux.conf:
      path: tmux.conf
    ~/.local/bin/:
      path: scripts/**
      glob: true
      create: true
    ~/.lein/profiles.clj:
      path: lein/profiles.clj
    ~/Library/Application Support/Code/User/settings.json:
      path: vscode/settings.json
      create: true
      relink: true
      force: true
    ~/Library/Application Support/Code/User/snippets/:
      path: snippets/**
      glob: true
      create: true

# BREW:
- shell:
  - [ test -e `which brew` || /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)" ]
- shell:
  - brew update && brew upgrade
- brew: 
  - python
  - nvm
  - neovim
  - pandoc
  - java
  - leiningen
  - git
  - gpg
  - fzf
  - jq
  - gh
  - ffmpeg
  - rclone
  - tmux
  - rust
  - borkdude/brew/babashka
  - ripgrep
  - gdu
  - discord
  - docker
  - starship
  - keybase
  - obsidian
  - sqlcipher
  - visual-studio-code
  - postgresql
  - coreutils # the missing GNU coreutils, macOS style
  - ollama
- tap:
  - homebrew/cask-fonts
- brew:
  - font-fira-code
  - font-hack-nerd-font
- tap:
  - homebrew/cask-versions
- brew:
  - iterm2-beta
- tap:
  - heroku/brew
- brew:
  - heroku
- tap:
  - openhue/cli
- brew:
  - openhue-cli
- tap:
  - basictex
- brew:
  - basictex
- shell:
  - [ test -e /Applications/Anki.app || open "https://apps.ankiweb.net" ]


# CLONE THESIS & BLOG IF NOT ALREADY PRESENT (AND LINK HOOKS)
- shell:
  - if [ ! -d "/Users/g/Documents/thesis" ]; then git clone git@github.com:gcuth/phd_thesis.git ~/Documents/thesis; fi
  - if [ ! -d "/Users/g/Documents/blog" ]; then git clone git@github.com:gcuth/gcuth.github.io.git ~/Documents/blog; fi
- link:
    ~/Documents/blog/.git/hooks/pre-commit:
      path: hooks/blog-pre-commit
- link:
    ~/Documents/thesis/.git/hooks/pre-commit:
      path: hooks/thesis-pre-commit
- link:
    ~/Documents/thesis/.git/hooks/post-commit:
      path: hooks/thesis-post-commit


# IF VSCODE EXISTS, INSTALL BASIC EXTENSIONS FROM FILE
- shell:
  - [ test -e `which code` && cat /Users/g/.dotfiles/vscode/extensions.txt | xargs -n 1 code --install-extension ]

# SETUP CRON JOBS:
- crontab:
  # every minute, log the currently playing song (if any) to a csv file
  - cron: "* * * * *"
    command: osascript /Users/g/.dotfiles/applescripts/tunes.js >> ~/Library/Mobile\ Documents/iCloud\~is\~workflow\~my\~workflows/Documents/Logs/Consumption/Music/playing.csv
  # Run the 'every five minutes' shortcut
  - cron: "*/5 * * * *"
    command: shortcuts run "Every Five Minutes"
  # run 'every hour' shortcut every hour at 59 minutes past
  - cron: "59 * * * *"
    command: shortcuts run "Every Hour"
  # Run a misc 'every day' shortcut every day at 4am
  - cron: "0 4 * * *"
    command: shortcuts run "Every Day"