#!/usr/bin/env bash

exit 0

# Skip on Sundays
if [[ $(date '+%a') == "Sun" ]]; then
    echo "It's Sunday, no need to run this script"
    exit 0
fi

# Skip after 5pm
if [[ $(date '+%H') -ge 17 ]]; then
    echo "It's after 5pm, no need to run this script"
    exit 0
fi

# Get the number of git commits in thesis repo since yesterday
THESIS=$(git -C ~/Documents/thesis rev-list --count HEAD --since=`date -v-1d +%Y-%m-%d`)

# Look at you, productivity! If you're 20+ commits for the day, you're free to do whatever you want.
if [[ $THESIS -gt 20 ]]; then
    echo "It's been $THESIS commits today, no need to run this script"
    exit 0
fi

# create a variable to count all 'above the threshold' repos
COUNT=0

# Calculate git stats for all git repos in ~/Code and ~/Documents; if you're above the threshold 2x 'average per day commits', then you're free to do whatever
for GITDIR in `find ~/Documents ~/Code -name .git -type d -prune | sed 's/\/.git//g'`; do
    SINCE_YESTERDAY=$(git -C $GITDIR rev-list --count HEAD --since=`date -v-1d +%Y-%m-%d`)
    FIRST_DATE=$(git -C $GITDIR log --reverse --format="format:%as" | head -n 1)
    TOTAL_COMMITS=$(git -C $GITDIR rev-list --count HEAD)
    TOTAL_DAYS=$(python3 -c "from datetime import datetime; start = datetime.strptime('$FIRST_DATE', '%Y-%m-%d'); end = datetime.now(); print((end - start).days)")
    AVERAGE_COMMITS=$(python3 -c "print(int(round($TOTAL_COMMITS / $TOTAL_DAYS)))")
    THRESHOLD=$(bb -i "(max (* 2 $AVERAGE_COMMITS) 1)")
    if [[ $SINCE_YESTERDAY -gt $THRESHOLD ]]; then # you're being productive *somewhere*, so it's fine!
        echo "$GITDIR has $SINCE_YESTERDAY commits, which is more than the threshold $THRESHOLD"
        # Increment the count
        COUNT=$((COUNT + 1))
    else # print the places you're not being productive
        echo "$GITDIR has $SINCE_YESTERDAY commits, which is less than (or equal to) the desired threshold $THRESHOLD"
    fi
done

# If you're being productive somewhere, then you're free to do whatever you want; if not, we need to take action
if [[ $COUNT -gt 0 ]]; then
    echo "You're being productive somewhere, no need to run this script"
    exit 0
else
    echo "You're not being productive anywhere, so we need to take action"
    # kill all chrome processes
    if [[ `pgrep "Chrome"` ]]; then
        for CHROME_PROCESS in `pgrep -i "Chrome"`; do
            echo "Killing Chrome process $CHROME_PROCESS"
            kill -9 $CHROME_PROCESS
        done
    fi
    # kill all safari processes
    # if [[ `pgrep -f "Safari.app"` ]]; then
    #     for SAFARI_PROCESS in `pgrep -f "Safari.app"`; do
    #         echo "Killing Safari process $SAFARI_PROCESS"
    #         kill -9 $SAFARI_PROCESS
    #     done
    # fi
    if [[ `pgrep "Chrome"` ]]; then
        # if chrome is running with a distracting tab (judging by the title), kill chrome entirely
        for TAB in `/opt/homebrew/bin/chrome-cli list tabs | grep -iE 'netflix|facebook|instagram|reddit|pirate|youtube|xkcd|twitter' | sed 's/\].*//g' | sed 's/\[//g'`; do
            for CHROME_PROCESS in `pgrep -i "Chrome"`; do
                echo "$TAB in Chrome looks unproductive; killing Chrome process $CHROME_PROCESS"
                kill -9 $CHROME_PROCESS
            done
            date '+%Y-%m-%d %H:%M:%S %z' >> /Users/g/Documents/blog/data/logs/refocus.csv
            exit 0
        done
        # check each tab (by id) to see if (judging by the url) it's a distracting tab; if so, kill it
        for TABID in `/opt/homebrew/bin/chrome-cli list tabs | sed 's/\] .*//g' | sed 's/\[//g'`; do
            TABURL=`/opt/homebrew/bin/chrome-cli info -t $TABID | grep -Eo 'http.*'`
            if [[ `echo $TABURL | grep -iE 'netflix.com|facebook.com|instagram.com|reddit.com|youtube.com|xkcd.com|twitter.com'` ]]; then
                for CHROME_PROCESS in `pgrep -i "Chrome"`; do
                    echo "Killing Chrome process $CHROME_PROCESS"
                    kill -9 $CHROME_PROCESS
                done
                date '+%Y-%m-%d %H:%M:%S %z' >> /Users/g/Documents/blog/data/logs/refocus.csv
                exit 0
            fi
        done
    fi
    if [[ `pgrep -i "vlc|quicktime|mtga|Epic|Untapped.gg|untapped-companion"` ]]; then
        # kill all distracting apps
        for HARM in `pgrep -i "vlc|quicktime|mtga|Epic|Untapped.gg|untapped-companion"`; do
            echo "You're using a distracting app! Killing the process associated with it $HARM"
            kill -9 $HARM;
        done
        date '+%Y-%m-%d %H:%M:%S %z' >> /Users/g/Documents/blog/data/logs/refocus.csv
        exit 0
    fi
    # if you're not using any distracting apps, then you're free to do whatever you want
    echo "You're not using any distracting apps, so you're free to do whatever you want"
    exit 0
fi
